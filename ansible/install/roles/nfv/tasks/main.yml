---
#
## Browbeat's NFV Install
##

# this playbook will reboot the target machine, can't run it if playbook is executed from localhost
- fail:
    msg: "system need reboot but this playbook is running from localhosti, please rerun from a remote machine"
  when: inventory_hostname == "localhost"

- name: check if hyper threading enabled
  shell: cat /sys/devices/system/cpu/cpu0/topology/thread_siblings_list | grep -q ','
  register: ht_enabled

- fail:
    msg: "For better performance, trafficgen should not have hyper threading disabled. Please disable hyper threading in BIOS and re-run this script."
  when: ht_enabled.rc == 0

- name: remove existing nfv directory to have a fresh start
  shell: |
    rm -rf "{{nfv_dir}}" 2>/dev/null
  ignore_errors: yes
- name: Create nfv directory 
  git: 
    repo: "{{nfv_git_url}}"
    dest: "{{nfv_dir}}"
    accept_hostkey: yes

- name: fixup browbeat config file
  lineinfile:
    name: "{{browbeat_path}}/browbeat-config.yaml"
    regexp: '^  nfv_script_dir:'
    line: "  nfv_script_dir: {{nfv_dir}}"

- name: fixup overcloudrc in nfv_test.cfg file
  lineinfile:
    name: "{{nfv_dir}}/nfv_test.cfg"
    regexp: '^overcloudrc'
    line: "overcloudrc={{overcloudrc}}"

- name: fixup stackrc in nfv_test.cfg  
  lineinfile:
    name: "{{nfv_dir}}/nfv_test.cfg"
    regexp: '^stackrc'
    line: "stackrc={{home_dir}}/stackrc"
- name: fixup nfv_tmp_dir in nfv_test.cfg
  lineinfile:
    name: "{{nfv_dir}}/nfv_test.cfg"
    regexp: '^nfv_tmp_dir'
    line: "nfv_tmp_dir={{nfv_dir}}/tmp"

- name: Deploy VM access vlan interface
  template:
    src: templates/ifcfg-vm-access.j2
    dest: "/etc/sysconfig/network-scripts/ifcfg-{{nfv_vm_access_device}}"
    owner: root
    group: root
  become: true

- name: Turn on vm access vlan interface
  shell: ifup {{nfv_vm_access_device}}
  become: true

- name: check SNAT entry
  shell: iptables -t nat -L POSTROUTING | egrep "MASQUERADE.*anywhere.*anywhere"
  register: testsnat
  failed_when: testsnat.stderr != ""
  become: true

- name: setup snat for VM if not done
  shell: |
    echo 1 > /proc/sys/net/ipv4/ip_forward
    oif=$(ip route | grep default | awk '{print $5}')
    iptables -t nat -A POSTROUTING -o $oif -j MASQUERADE
    /sbin/service iptables save
  when: testsnat.rc == 1
  become: true

- name: install rhelosp-rhel-7-fast-datapth.repo
  copy: src=files/rhelosp-rhel-7-fast-datapth.repo dest=/etc/yum.repos.d/rhelosp-rhel-7-fast-datapth.repo owner=root group=root mode=0644
  become: true

- name: update tuned and isolcpu boot parameter
  shell: |
    yum install -y dpdk
    yum install -y dpdk-tools
    yum -y install libhugetlbfs-utils
    hugeadm --create-global-mounts
    yum remove -y tuned
    yum install -y tuned
    yum install -y tuned-profiles-cpu-partitioning
    numa0_list=$(lscpu 2>/dev/null | sed -r -n "s/NUMA node0.* [0-9],([0-9\,]+)/\1/p")
    numa1_list=$(lscpu 2>/dev/null | sed -r -n "s/NUMA node1.* [0-9],([0-9\,]+)/\1/p")
    if [ -z ${numa0_list+x} ]; then
      numa0_list=2
    fi
    if [ -z ${numa1_list+x} ]; then
      numa1_list=3
    fi
    nic1_numa=$(cat /sys/class/net/{{trafficgen_nic1}}/device/numa_node)
    nic2_numa=$(cat /sys/class/net/{{trafficgen_nic2}}/device/numa_node)
    if (( nic1_numa == 0 )); then
      clist=$numa0_list
      olist=$numa1_list
    else
      clist=$numa1_list
      olist=$numa0_list
    fi
    if (( nic2_numa != nic1_numa )); then
      clist=$clist,$olist
    fi
    grubby --update-kernel=`grubby --default-kernel` --args="default_hugepagesz=1G hugepagesz=1G hugepages=16 isolcpus=$clist intel_iommu=on iommu=pt"
    sed -i -r '/^isolated_cores/d' /etc/tuned/cpu-partitioning-variables.conf
    echo isolated_cores=$clist >> /etc/tuned/cpu-partitioning-variables.conf
    tuned-adm profile cpu-partitioning
  become: true

- debug: msg="Manual reboot of the director is necessary. Manully edit traffic_gen_src_slot/traffic_gen_dst_slot in {{nfv_dir}}/nfv_test.cfg." 
  when: inventory_hostname == "localhost"
 
- name: Reboot machine
  shell: "nohup sh -c '( sleep 5 ; shutdown -r now )' &"
  async: 0
  poll: 0
  ignore_errors: true
  become: true
  when: inventory_hostname != "localhost"

# 8 minute timeout
- name: Wait for Machine Ready
  local_action:
    module: wait_for
    host: "{{inventory_hostname}}"
    port: 22
    delay: 60
    timeout: 480
  when: inventory_hostname != "localhost"

# after reboot, traffic-gen ports become kernel ports, get the pci-slot from the int name
- name: Get traffic-gen port bus info
  shell: |
    traffic_gen_src_slot=$(ethtool -i {{trafficgen_nic1}} | grep "bus-info:" | awk '{print $2}')
    traffic_gen_dst_slot=$(ethtool -i {{trafficgen_nic2}} | grep "bus-info:" | awk '{print $2}')
    sed -i -r "s/^traffic_gen_src_slot=.*/traffic_gen_src_slot=${traffic_gen_src_slot}/" {{nfv_dir}}/nfv_test.cfg
    sed -i -r "s/^traffic_gen_dst_slot=.*/traffic_gen_dst_slot=${traffic_gen_dst_slot}/" {{nfv_dir}}/nfv_test.cfg
  become: true
  when: inventory_hostname != "localhost"

